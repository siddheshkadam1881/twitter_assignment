swagger: "2.0"
info:
  version: "0.0.1"
  title: VLP
# during dev, should point to your local machine
host: localhost:10010
# https://vlp.bridgelabz.com/api/v1/lab/dev-machine/
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:

  /register:
    x-swagger-router-controller: user
    post:
      operationId: register
      description: register a new learner here..
      parameters:
        - in: body
          name: requestParameter
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/registerObject'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SucessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /create:
    x-swagger-router-controller: create
    post:
      operationId: save
      description: add a new learner..
      parameters:
        - in: body
          name: requestParameter
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/learnerObject'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SucessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /destroy:
    x-swagger-router-controller: destroy
    post:
      operationId: destroy
      description: add a new learner..
      parameters:
        - in: body
          name: requestParameter
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/destroyObject'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SucessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /start:
    x-swagger-router-controller: start
    post:
      operationId: start
      description: add a new learner..
      parameters:
        - in: body
          name: requestParameter
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/startObject'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SucessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /stop:
    x-swagger-router-controller: stop
    post:
      operationId: stop
      description: add a new learner..
      parameters:
        - in: body
          name: requestParameter
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/stopObject'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SucessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"



# complex objects have schema definitions
definitions:
  registerObject:
    type: object
    properties:
      #first, last name, email, fellowship program, duration, start date, end dates, city, company
      first_name:
        type: string
      last_name:
        type: string
      userpassword:
        type: string 
      Role:
        type: string
      email:
        type: string
      fellowship program:
        type: string
      duration:
        type: string
      start_date:
        type: string
      end_date:
        type: string
      city:
        type: string
      company:
        type: string





  learnerObject:
    type: object
    properties:
      learner_id:
        type: string
      username:
        type: string
      password:
        type: string
  destroyObject:
    type: object
    properties:
      learner_id:
        type: string
  startObject:
    type: object
    properties:
      username:
        type: string
  stopObject:
    type: object
    properties:
      username:
        type: string


  SucessResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment
    required:
      - success
      - description
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
